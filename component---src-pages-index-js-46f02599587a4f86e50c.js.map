{"version":3,"file":"component---src-pages-index-js-46f02599587a4f86e50c.js","mappings":"+MAMA,MAAMA,EAAe,CAAC,SAAU,UAAW,SAAU,SAAU,UAAW,QAAS,SAAU,MAAO,UA+EpG,UA7Ec,IAAwC,IAAvC,KAAEC,EAAMC,aAAa,OAAEC,IAAU,EAC9C,MAAMC,EAAQH,EAAKI,kBAAkBC,OAC/B,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAS,IAW/C,OAAqB,IAAjBL,EAAMM,OAEN,gCACE,gBAAC,IAAG,CAACP,OAAQA,IACb,yBAAG,yBAQP,gCACE,gBAAC,IAAG,CAACA,OAAQA,IACb,uBAAKQ,UAAU,2BACZX,EAAaY,KAAI,CAACC,EAAKC,IACtB,0BACEC,IAAKF,EAAMC,EACXE,QAAS,IA3BQH,KAMzBL,EALGK,IAAQN,EAKIM,EAJE,GAIE,EAqBII,CAAkBJ,GACjCF,UAAWE,IAAQN,EAAc,aAAe,IAE/CM,MAIP,sBAAIK,MAAO,CAAEC,UAAU,SACpBf,EACIgB,QAAOC,IAASd,GAAqBA,IAAgBc,EAAKC,YAAYT,MACtED,KAAIS,IACH,MAAME,EAAQF,EAAKC,YAAYC,OAASF,EAAKG,OAAOC,KAEpD,OACE,sBAAIV,IAAKM,EAAKG,OAAOC,MACnB,2BACEd,UAAU,iBACVe,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIR,EAAKG,OAAOC,KAAMK,SAAS,OACnC,wBAAMA,SAAS,YAAYP,KAG/B,yBAAG,4BAAOF,EAAKC,YAAYT,MAC3B,6BAAQQ,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,kBAIZ,KAId,EAWA,MAAMM,EAAO,QAAGlC,aAAa,OAAEC,IAAU,SAAK,gBAAC,IAAG,CAACoB,MAAM,YAAYpB,OAAQA,GAAU,C","sources":["webpack://my-personal-blog/./src/pages/index.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Seo from \"../components/seo\"\n\nconst blogTagsList = [\"NodeJS\", \"ReactJS\", \"NextJS\", \"Python\", \"MongoDB\", \"Linux\", \"Docker\", \"Log\", \"Others\"]\n\nconst Index = ({ data, pageContext: { locale } }) => {\n  const posts = data.allMarkdownRemark.nodes\n  const [selectedTag, setSelectedTag] = useState(\"\")\n\n  const handleSelectedTag = (tag) => {\n    if(tag === selectedTag) {\n      setSelectedTag('')\n      return\n    }\n    \n    setSelectedTag(tag)\n  }\n\n  if (posts.length === 0) {\n    return (\n      <>\n        <Bio locale={locale} />\n        <p>\n          No blog posts found.\n        </p>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Bio locale={locale} />\n      <div className='blog-tag-list-container'>\n        {blogTagsList.map((tag, index) => (\n          <button \n            key={tag + index}\n            onClick={() => handleSelectedTag(tag)}\n            className={tag === selectedTag ? \"active-tag\" : \"\"}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n      <ol style={{ listStyle: `none` }}>\n        {posts\n            .filter(post => !selectedTag ? true : selectedTag === post.frontmatter.tag)\n            .map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              \n              return (\n                <li key={post.fields.slug}>\n                  <article\n                    className=\"post-list-item\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                  >\n                    <header>\n                      <h2>\n                        <Link to={post.fields.slug} itemProp=\"url\">\n                          <span itemProp=\"headline\">{title}</span>\n                        </Link>\n                      </h2>\n                      <p><span>{post.frontmatter.tag}</span></p>\n                      <small>{post.frontmatter.date}</small>\n                    </header>\n                    <section>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                        />\n                    </section>\n                  </article>\n                </li>\n              )\n        })}\n      </ol>\n    </>\n  )\n}\n\nexport default Index\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = ({ pageContext: { locale } }) => <Seo title=\"Home Page\" locale={locale} />\n\nexport const pageQuery = graphql`\nquery Index(\n  $locale: String\n  $dateFormat: String\n) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        fields: { locale: { eq: $locale } }\n      }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n          locale\n          isDefaultLang\n        }\n        frontmatter {\n          date(formatString: $dateFormat)\n          title\n          description\n          tag\n        }\n      }\n    }\n  }\n`\n"],"names":["blogTagsList","data","pageContext","locale","posts","allMarkdownRemark","nodes","selectedTag","setSelectedTag","useState","length","className","map","tag","index","key","onClick","handleSelectedTag","style","listStyle","filter","post","frontmatter","title","fields","slug","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head"],"sourceRoot":""}