{"componentChunkName":"component---src-templates-blog-post-js","path":"/en/2023-05-15/how-to-apply-session-in-nextjs/","result":{"data":{"site":{"siteMetadata":{"title":"Seunghyun's Blog"}},"markdownRemark":{"id":"c8d36701-ad4a-53f1-9270-2d7d5963541d","excerpt":"Session is stored and used to communicate clients and servers for a certain amount of time. Today, we will talk about how to implement session in Next.js…","html":"<p>Session is stored and used to communicate clients and servers for a certain amount of time. Today, we will talk about how to implement session in Next.js application. We will create a simple application to understand how it works in Next.js. Let's dig into it.</p>\n<h2>Prerequisite</h2>\n<ul>\n<li>Basic knowledge about Next.js and typescript</li>\n</ul>\n<h2>Install</h2>\n<p>We will use <a href=\"https://github.com/vvo/iron-session\">iron-session</a> because it is featured in the Next.js documentation and it is easy to apply. Install iron-session in the Next.js application:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install iron-session</code></pre></div>\n<h2>Goal</h2>\n<p>We will create two pages. One is the index page and the other is login page. In the index page, we will display a username if any user is logged in or a text saying <em><strong>I'm Guest User</strong></em> as a default. What will happen in the login page is that we will make a request to an API to log in. If the request succeeds, it will redirect to the index page. Finally, we will need the API to handle log-in request, which is where we save session data.</p>\n<p>The goal here is once a user is logged in, we will see if their name shows and when the page is refreshed, the name still stays still for a certain amount of time.</p>\n<h2>App Structure</h2>\n<p>This is the structure of the core part under the project folder:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── lib\r\n│   ├── withSession.tsx\r\n├── pages\r\n│   ├── api\r\n│   │   ├── login.tsx\r\n│   ├── login\r\n│   │   ├── index.tsx\r\n│   ├── index.tsx\r\n│   ├── _app.tsx</code></pre></div>\n<h2>lib/withSession.tsx</h2>\n<p>We will create two wrappers that handle session behind the scene. One is for the API route and the other is for <strong>getServersideProps</strong> function as you can infer from their names.</p>\n<p>There are a few things to talk about.</p>\n<ol>\n<li>Since we use typescript, we should let typescript know what we will store in session - <em><strong>username</strong> is added to IronSessionData interface here</em></li>\n<li>We should put a password that is at least 32 character long for the option of the session.</li>\n<li>We can set up <strong>cookieOptions</strong> based on our needs</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GetServerSidePropsContext<span class=\"token punctuation\">,</span> GetServerSidePropsResult<span class=\"token punctuation\">,</span> NextApiHandler <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withIronSessionApiRoute<span class=\"token punctuation\">,</span> withIronSessionSsr <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"iron-session/next\"</span><span class=\"token punctuation\">;</span>\r\n\r\ndeclare module <span class=\"token string\">\"iron-session\"</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IronSessionData</span> <span class=\"token punctuation\">{</span>\r\n    username<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">const</span> sessionOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cookie-password-must-be-at-least-32-character-long\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">cookieName</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my-cookie-name\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token comment\">// secure: true should be used in production (HTTPS) but can't be used in development (HTTP)</span>\r\n  <span class=\"token literal-property property\">cookieOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">secure</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">maxAge</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">withSessionRoute</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">handler</span><span class=\"token operator\">:</span> NextApiHandler</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token function\">withIronSessionApiRoute</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">,</span> sessionOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> withSessionSsr<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> string<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> unknown <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> string<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> unknown <span class=\"token punctuation\">}</span> <span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> GetServerSidePropsContext</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> GetServerSidePropsResult<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> Promise<span class=\"token operator\">&lt;</span>GetServerSidePropsResult<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">>></span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token function\">withIronSessionSsr</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">,</span> sessionOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>pages/index.tsx</h2>\n<p>Notice that <strong>getServerSideProps</strong> is passed to the session wrapper we have created an argument. In <strong>getServerSideProps</strong>, session data can be accessed and it will be passed to the Home component as a prop. If any username is stored in the session, the username will be displayed on the client side.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/link\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withSessionSsr <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../lib/withSession\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Props</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Home</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> username <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">></span><span class=\"token constant\">I</span>'m <span class=\"token punctuation\">{</span>username <span class=\"token operator\">||</span> <span class=\"token string\">\"Guest User\"</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>button<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Go To Login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> getServerSideProps <span class=\"token operator\">=</span> <span class=\"token function\">withSessionSsr</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getServersideProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">,</span> res <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>username <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n      \r\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> username\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"page Home error\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> <span class=\"token number\">307</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>pages/login/index.tsx</h2>\n<p>Login component will handle user information and make a request to <code class=\"language-text\">api/login</code> route. If any user is logged in, it will redirect to the Home route.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormEvent<span class=\"token punctuation\">,</span> useRef<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/router\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withSessionSsr <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../lib/withSession\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Props</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> string\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Login</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> username <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> emailRef <span class=\"token operator\">=</span> useRef<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">pathname</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> FormEvent<span class=\"token operator\">&lt;</span>HTMLFormElement<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>emailRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">const</span> email <span class=\"token operator\">=</span> emailRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span>\r\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/login'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">!==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Can't login\"</span><span class=\"token punctuation\">)</span>\r\n      router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pathname</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>login<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>emailRef<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>Login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> getServerSideProps <span class=\"token operator\">=</span> <span class=\"token function\">withSessionSsr</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getServersideProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">,</span> res <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>username <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> username\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> <span class=\"token number\">307</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>pages/api/login.tsx</h2>\n<p>This endpoint takes a log-in request from the client and find a user from a database and then, save the information in session if the matching user is found - <em>As you know, instead of using <strong>mockUsers</strong> as shown below, you should implement a database in the endpoint in a real world</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withSessionRoute <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../lib/withSession\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> mockUsers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Admin User\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"admin@gmail.com\"</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Just User\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"justuser@gmail.com\"</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withSessionRoute</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"POST\"</span><span class=\"token operator\">:</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> email <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\r\n\t\t\t\t<span class=\"token keyword\">const</span> loggedInUsername <span class=\"token operator\">=</span> mockUsers<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>email <span class=\"token operator\">===</span> email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>loggedInUsername<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Can't find the user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>username <span class=\"token operator\">=</span> loggedInUsername<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">await</span> req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Found the user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> \r\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">405</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>req<span class=\"token punctuation\">.</span>method<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> Not Allowed</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Run</h2>\n<p>Run the code and try like this:</p>\n<p><img src=\"/79dc170977b0595a21ac7c41d1be445d/next-sesion-login.gif\" alt=\"next-session-login\"></p>\n<p>As you can see, when a user named <strong>Admin User</strong> is logged in and then, the page is refreshed, it still shows <strong>Admin User</strong> because the data is now stored in the session for an amount of time we set.</p>\n<p>Although this practice is simplified to solely explain how the session works in Next.js, I hope you have grasped the core concept and elaborate it based on your projects.</p>\n<p><em><strong>THANKS FOR READING. SEE YOU NEXT TIME!</strong></em></p>","frontmatter":{"title":"How To Use Session in Next.js","date":"15 May, 2023","description":"","tag":["NextJS"]},"fields":{"locale":"en"}},"previous":{"fields":{"slug":"/en/2023-05-09/how-to-manage-node-versions-on-windows-using-nvm"},"frontmatter":{"title":"How To Manage Node Version On Windows Using nvm"}},"next":{"fields":{"slug":"/en/2023-06-14/choose_cloud_service_for_server"},"frontmatter":{"title":"Choose Cloud Service For Server"}}},"pageContext":{"locale":"en","isDefaultLang":false,"slug":"/en/2023-05-15/how-to-apply-session-in-nextjs","titleByLang":{"ko":"nextjs-세션-적용","en":"how-to-apply-session-in-nextjs"},"dateFormat":"DD MMM, YYYY","id":"c8d36701-ad4a-53f1-9270-2d7d5963541d","previousPostId":"dbe999bf-dbac-50d1-a6a0-2001f57c7ee7","nextPostId":"a2611cb5-2d8f-548b-a78f-79d46065d926"}},"staticQueryHashes":[],"slicesMap":{}}