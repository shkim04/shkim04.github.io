{"componentChunkName":"component---src-templates-blog-post-js","path":"/en/how-to-detect-click-outside-react-component/","result":{"data":{"site":{"siteMetadata":{"title":"Seunghyun's Blog"}},"markdownRemark":{"id":"d1cad91a-502d-5d25-96f7-64a7f84bd35c","excerpt":"click-outside If you read this article, I think you are probably working on toggling visibility such as  or  menu — Well, at least it was my case. In fact…","html":"<p><img src=\"/3f2fc5ce334dd7bb56703db1bbfe887f/click-outside.gif\" alt=\"click-outside\"></p>\n<p>If you read this article, I think you are probably working on toggling visibility such as <code class=\"language-text\">modal</code> or <code class=\"language-text\">dropdown</code> menu — <em>Well, at least it was my case</em>. In fact, since <code class=\"language-text\">modal</code> and <code class=\"language-text\">dropdown</code> menu are the popular UI elements that are commonly used in React development, the chances are you want to know how to detect click outside a component sooner or later. Let’s figure out how to do it.</p>\n<h2>ClickOutside Component</h2>\n<p>I simply name the component <strong>ClickOutside</strong> because it will detect whether a click event happens inside or outside of it. Feel free to name anything if you would like to. Here is how we will create it:</p>\n<p>First, we will use <code class=\"language-text\">useRef</code> hook so that the outer <code class=\"language-text\">div</code> tag the component returns can be referenced through the component.</p>\n<p>Second, we will have a handler function that catches an event, evaluate whether it happens inside or outside the outer <code class=\"language-text\">div</code> tag and then, do stuff based on its consequence.</p>\n<p>Last, we add an event listener for <code class=\"language-text\">mousedown</code> so when we click, this handler function will be executed.</p>\n<p>The code block below is the component:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRef<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ClickOutside</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> exceptionRef<span class=\"token punctuation\">,</span> onClick<span class=\"token punctuation\">,</span> className <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> wrapperRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousedown'</span><span class=\"token punctuation\">,</span> handleClickListener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousedown'</span><span class=\"token punctuation\">,</span> handleClickListener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClickListener</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> clickedInside<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>exceptionRef<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      clickedInside <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>wrapperRef <span class=\"token operator\">&amp;&amp;</span> wrapperRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> exceptionRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">===</span> event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">||</span> exceptionRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      clickedInside <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>wrapperRef <span class=\"token operator\">&amp;&amp;</span> wrapperRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clickedInside<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>wrapperRef<span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>className <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This component has 4 props that are passed from its parent component.</p>\n<blockquote>\n<p><strong>children</strong> is anything that goes under the outer div tag that is referenced.</p>\n<p><strong>exceptionRef</strong> can be a component or a simple div tag that is referenced, which can be literally an exception for its function. That is, when exceptionRef is clicked, it is thought to happen in the insided of <strong>ClickOutside</strong> component</p>\n<p><strong>onClick</strong> is a handler function that is passed to this component. It will be executed when the click event happens outside of the component.</p>\n<p><strong>className</strong> makes the component have a className so you can apply css to the component.</p>\n</blockquote>\n<h2>Example</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ClickOuside <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/ClickOutside\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./App.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>visible<span class=\"token punctuation\">,</span> setVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleText</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span>prev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">'container'</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ClickOuside\n        onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleText<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">'red-box'</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            If you click here inside <span class=\"token keyword\">this</span> red box<span class=\"token punctuation\">,</span> Nothing happens<span class=\"token punctuation\">.</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ClickOuside<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>\n        visible <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">'hidden-text'</span><span class=\"token operator\">></span>\n            You clicked outside <span class=\"token keyword\">of</span> the red box<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>To make <span class=\"token keyword\">this</span> message disappear<span class=\"token punctuation\">,</span> click outside <span class=\"token keyword\">of</span> the red box again<span class=\"token punctuation\">.</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span> </code></pre></div>\n<p>Let’s create a <code class=\"language-text\">div</code> tag whose class name is given red box that says <em><strong>If you click here inside this red box, Nothing happens</strong></em>. We will wrap the red box <code class=\"language-text\">div</code> tag around <strong>ClickOutside</strong> component.</p>\n<p>Then, we pass a handler function, which toggles visibility of a <code class=\"language-text\">div</code> tag containing a hidden text to <strong>ClickOutside</strong> component.</p>\n<p>What is expected to happen is when we click the outside of the red box, the hidden text will show up, saying <em><strong>You clicked outside of the red box! To make this message disappear, click outside of the red box again</strong></em>. If clicked again, it will disappear.</p>\n<p>You can create another <code class=\"language-text\">div</code> tag and give it a reference by using <code class=\"language-text\">useRef</code> hook, then pass it as exceptionRef. When you click it, nothing will happens as you click the inside of <strong>ClickOutside</strong> component.</p>\n<p>I think there are various ways to use this component on React applications. I hope you take the code and make it better for your application!</p>\n<p><em><strong>THANKS FOR READING. SEE YOU NEXT TIME!</strong></em></p>\n<p><em>This is originally posted on my <a href=\"https://medium.com/@shkim04/react-how-to-detect-click-outside-a-component-984fe2e003e8\">Medium</a>.</em>\n<em>Let's connect!</em></p>","frontmatter":{"title":"How To Detect Click Outside A React Component","date":"19 Feb, 2023","description":"We will create a react component that can know whether a click event comes from the outside of it or the inside of it.","tag":["ReactJS"]},"fields":{"locale":"en"}},"previous":{"fields":{"slug":"/en/how-i-used-crontab-to-schedule-jobs-for-my-work"},"frontmatter":{"title":"How I Used Crontab To Schedule Jobs On Linux For My Work"}},"next":{"fields":{"slug":"/en/how-to-create-a-custom-dropdown-react-component"},"frontmatter":{"title":"How To Create A Custom Dropdown React Component"}}},"pageContext":{"locale":"en","isDefaultLang":false,"slug":"/en/how-to-detect-click-outside-react-component","titleByLang":{"ko":"react-컴포넌트-밖-클릭-감지","en":"how-to-detect-click-outside-react-component"},"dateFormat":"DD MMM, YYYY","id":"d1cad91a-502d-5d25-96f7-64a7f84bd35c","previousPostId":"0b5f3b2e-dfce-516d-9b2b-248d3a6faa1a","nextPostId":"e096d5df-f47e-5a38-b614-8272fdde57be"}},"staticQueryHashes":[],"slicesMap":{}}