{"componentChunkName":"component---src-templates-blog-post-js","path":"/nextjs-세션-적용/","result":{"data":{"site":{"siteMetadata":{"title":"Seunghyun's Blog"}},"markdownRemark":{"id":"4da8e005-3801-5c0a-a838-ddced7098691","excerpt":"Session은 일정한 시간동안 저장되며 클라이언트와 서버 사이에서 소통할 때 사용된다. 오늘은 Next.js에 세션을 적용하는 법에 알아보고자 한다. 세션이 Next.js에서 어떻게 동작하는지 간단한 어플리케이션을 만들어 확인하려고 한다. 시작해보자. 필수 Next.js…","html":"<p>Session은 일정한 시간동안 저장되며 클라이언트와 서버 사이에서 소통할 때 사용된다. 오늘은 Next.js에 세션을 적용하는 법에 알아보고자 한다. 세션이 Next.js에서 어떻게 동작하는지 간단한 어플리케이션을 만들어 확인하려고 한다. 시작해보자.</p>\n<h2>필수</h2>\n<ul>\n<li>Next.js와 typescript에 대한 기본 지식</li>\n</ul>\n<h2>설치</h2>\n<p><a href=\"https://github.com/vvo/iron-session\">iron-session</a>을 사용할 것이다. 이유는 Next.js 문서에 언급이 되었으며 적용하는데 어려움이 없는 라이브러리이기 때문이다. 다음과 같이 Next.js 어플리케이션에 iron-session을 설치한다:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install iron-session</code></pre></div>\n<h2>목표</h2>\n<p>두 개의 페이지를 만든다. 하나는 index 페이지이고 다른 하나는 login 페이지다. index 페이지에서 로그인한 사용자의 이름을 보여주고 아니면 기본값으로 <em><strong>I'm Guest User</strong></em> 를 보여준다. 로그인 페이지에서는 log-in 요청을 API에 보낸다. 요청이 성공적으로 완료되면 index 페이지로 이동시킨다. 마지막으로 log-in 요청을 처리하는 API가 필요한데 여기에서 세션을 저장하게 된다.</p>\n<p>사용자가 로그인하면 해당 사용자의 이름이 출력이 되는지 확인하고 페이지를 새로고침하였을 때, 그 이름이 지정된 시간동안 그대로 남아 있는지 확인하는 것이 목표다.</p>\n<h2>App 구조</h2>\n<p>프로젝트 폴더 하위에 중요 부분의 구조만 나타내면 다음과 같다:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── lib\r\n│   ├── withSession.tsx\r\n├── pages\r\n│   ├── api\r\n│   │   ├── login.tsx\r\n│   ├── login\r\n│   │   ├── index.tsx\r\n│   ├── index.tsx\r\n│   ├── _app.tsx</code></pre></div>\n<h2>lib/withSession.tsx</h2>\n<p>세션을 처리하는 두 개의 wrapper 함수를 만든다. 이름에서 유추할 수 있듯이 하나는 API에 쓰이고 다른 하나는 <strong>getServersideProps</strong> 함수에 사용된다.</p>\n<p>몇 가지 짚고 넘어갈 부분이 있다.</p>\n<ol>\n<li>typescript를 사용하기 때문에 세션에 무엇을 저장할 지 명시해야 한다 - <em><strong>username</strong>이 IronSessionData interface에 추가되었다</em></li>\n<li>세션 옵션에 최소 32자의 문자를 지닌 비밀번호를 입력해야 한다</li>\n<li>사용자의 필요에 맞게 <strong>cookieOptions</strong>를 설정한다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GetServerSidePropsContext<span class=\"token punctuation\">,</span> GetServerSidePropsResult<span class=\"token punctuation\">,</span> NextApiHandler <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withIronSessionApiRoute<span class=\"token punctuation\">,</span> withIronSessionSsr <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"iron-session/next\"</span><span class=\"token punctuation\">;</span>\r\n\r\ndeclare module <span class=\"token string\">\"iron-session\"</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IronSessionData</span> <span class=\"token punctuation\">{</span>\r\n    username<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">const</span> sessionOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cookie-password-must-be-at-least-32-character-long\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">cookieName</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my-cookie-name\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token comment\">// secure: true should be used in production (HTTPS) but can't be used in development (HTTP)</span>\r\n  <span class=\"token literal-property property\">cookieOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">secure</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">maxAge</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">withSessionRoute</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">handler</span><span class=\"token operator\">:</span> NextApiHandler</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token function\">withIronSessionApiRoute</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">,</span> sessionOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> withSessionSsr<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> string<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> unknown <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> string<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> unknown <span class=\"token punctuation\">}</span> <span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> GetServerSidePropsContext</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> GetServerSidePropsResult<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> Promise<span class=\"token operator\">&lt;</span>GetServerSidePropsResult<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">>></span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token function\">withIronSessionSsr</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">,</span> sessionOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>pages/index.tsx</h2>\n<p><strong>getServerSideProps</strong>이 세션 wrapper 함수에 인자 값으로 들어가는 것을 볼 수 있다. <strong>getServerSideProps</strong>에서 세션 정보에 접근이 가능하고 Home 컴포넌트에 prop으로 보낼 수 있게 된다. 사용자 이름이 세션에 저장이 되었다면 그 이름이 클라이언트에서 출력이 될 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/link\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withSessionSsr <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../lib/withSession\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Props</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Home</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> username <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">></span><span class=\"token constant\">I</span>'m <span class=\"token punctuation\">{</span>username <span class=\"token operator\">||</span> <span class=\"token string\">\"Guest User\"</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>button<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Go To Login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> getServerSideProps <span class=\"token operator\">=</span> <span class=\"token function\">withSessionSsr</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getServersideProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">,</span> res <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>username <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n      \r\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> username\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"page Home error\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> <span class=\"token number\">307</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>pages/login/index.tsx</h2>\n<p>Login 컴포넌트는 사용자 정보를 다루고 <code class=\"language-text\">api/login</code>에 요청을 보낸다. 만약 사용자가 로그인이 되었다면 Home 라우트로 이동시킨다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormEvent<span class=\"token punctuation\">,</span> useRef<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/router\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withSessionSsr <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../lib/withSession\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Props</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> string\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Login</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> username <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> emailRef <span class=\"token operator\">=</span> useRef<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">pathname</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> FormEvent<span class=\"token operator\">&lt;</span>HTMLFormElement<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>emailRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">const</span> email <span class=\"token operator\">=</span> emailRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span>\r\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/login'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">!==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Can't login\"</span><span class=\"token punctuation\">)</span>\r\n      router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">pathname</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>login<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>emailRef<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>Login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> getServerSideProps <span class=\"token operator\">=</span> <span class=\"token function\">withSessionSsr</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getServersideProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">,</span> res <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>username <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> username\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> <span class=\"token number\">307</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>pages/api/login.tsx</h2>\n<p>이 endpoint는 클라이언트로부터 log-in 요청을 받고 데이터베이스에서 사용자를 찾는다. 그리고 조건에 맞는 사용자를 확인하면 그 정보를 세션에 저장한다 - <em>아시다시피 아래와 같이 <strong>mockUsers</strong>를 사용하는 대신 실제 개발에서는 데이터베이스를 적용해야 한다</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withSessionRoute <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../lib/withSession\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> mockUsers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Admin User\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"admin@gmail.com\"</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Just User\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"justuser@gmail.com\"</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withSessionRoute</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"POST\"</span><span class=\"token operator\">:</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> email <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\r\n\t\t\t\t<span class=\"token keyword\">const</span> loggedInUsername <span class=\"token operator\">=</span> mockUsers<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>email <span class=\"token operator\">===</span> email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>loggedInUsername<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Can't find the user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>username <span class=\"token operator\">=</span> loggedInUsername<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">await</span> req<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Found the user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> \r\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">405</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>req<span class=\"token punctuation\">.</span>method<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> Not Allowed</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>실행</h2>\n<p>코드를 실행하여 다음과 같이 시도해본다:</p>\n<p><img src=\"/79dc170977b0595a21ac7c41d1be445d/next-sesion-login.gif\" alt=\"next-session-login\"></p>\n<p><strong>Admin User</strong>라는 사용자가 로그인하고 페이지를 새로고침했을 때, 지정한 시간만큼 세션에 정보가 저장되어 있기 때문에 여전히 <strong>Admin User</strong>를 출력한다.</p>\n<p>Next.js에서 세션이 어떻게 동작하는지에 중점을 두었기 때문에 아주 간단한 예를 들었지만 중요 개념을 이해하고 개인의 프로젝트에 맞게 응용/발전시켜 보기를 바란다.</p>\n<p><em><strong>읽어 주셔서 감사합니다. To be continued!</strong></em></p>","frontmatter":{"title":"Next.js에 세션 적용하기","date":"2023년 05월 15일","description":"","tag":["NextJS"]},"fields":{"locale":"ko"}},"previous":{"fields":{"slug":"/nvm-windows-node-버전-관리"},"frontmatter":{"title":"nvm으로 윈도우에서 Node 버전 관리하기"}},"next":{"fields":{"slug":"/서버용_클라우드_서비스_고르기"},"frontmatter":{"title":"#1 서버용 클라우드 서비스 고르기"}}},"pageContext":{"locale":"ko","isDefaultLang":true,"slug":"/nextjs-세션-적용","titleByLang":{"ko":"nextjs-세션-적용","en":"how-to-apply-session-in-nextjs"},"dateFormat":"YYYY년 MM월 DD일","id":"4da8e005-3801-5c0a-a838-ddced7098691","previousPostId":"671b3be8-78f0-5edb-84cb-7db5b2df28f2","nextPostId":"bb2b2960-1f75-51dd-b53a-497306d367dd"}},"staticQueryHashes":[],"slicesMap":{}}