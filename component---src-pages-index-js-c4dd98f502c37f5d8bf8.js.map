{"version":3,"file":"component---src-pages-index-js-c4dd98f502c37f5d8bf8.js","mappings":"yNAMA,MAAMA,EAAe,CAAC,SAAU,UAAW,SAAU,UAAW,QAAS,QAAS,UAsFlF,UApFc,IAAwC,IAAvC,KAAEC,EAAMC,aAAa,OAAEC,IAAU,EAC9C,MAAMC,EAAQH,EAAKI,kBAAkBC,OAC/B,EAACC,EAAa,EAACC,IAAmBC,EAAAA,EAAAA,UAAS,IASjD,OAAqB,IAAjBL,EAAMM,OAEN,gCACE,gBAAC,IAAG,CAACP,OAAQA,IACb,yBAAG,yBAQP,gCACE,gBAAC,IAAG,CAACA,OAAQA,IACb,uBAAKQ,UAAU,2BACZX,EAAaY,KAAI,CAACC,EAAKC,IACtB,0BACEC,IAAKF,EAAMC,EACXE,QAAS,IAzBQH,KACzB,IAAII,GAAkB,OAAOV,GACzBW,EAAoBD,EAAmBE,QAAQN,IAAQ,EAAII,EAAmBG,QAAOC,GAAeA,IAAgBR,IAAI,kBAAOI,GAAkB,CAAEJ,IAEvJL,EAAgBU,EAAkB,EAqBXI,CAAkBT,GACjCF,UAAWJ,EAAaY,QAAQN,IAAQ,EAAI,aAAe,IAE1DA,MAIP,sBAAIU,MAAO,CAAEC,UAAU,SACpBpB,EACIgB,QAAOK,GACqB,IAAxBlB,EAAaG,QACTe,EAAKC,YAAYb,IAAIc,MAAKd,GAAON,EAAaY,QAAQN,IAAQ,MAEtED,KAAIa,IACH,MAAMG,EAAQH,EAAKC,YAAYE,OAASH,EAAKI,OAAOC,KAEpD,OACE,sBAAIf,IAAKU,EAAKI,OAAOC,MACnB,2BACEnB,UAAU,iBACVoB,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIT,EAAKI,OAAOC,KAAMK,SAAS,OACnC,wBAAMA,SAAS,YAAYP,KAG/B,yBAEIH,EAAKC,YAAYb,IAAID,KAAI,CAACC,EAAKC,IAC7B,wBAAMC,IAAKF,EAAMC,GAAQD,MAI/B,6BAAQY,EAAKC,YAAYU,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CL,SAAS,kBAIZ,KAId,EAWA,MAAMM,EAAO,QAAGvC,aAAa,OAAEC,IAAU,SAAK,gBAAC,IAAG,CAACyB,MAAM,YAAYzB,OAAQA,GAAU,C","sources":["webpack://my-personal-blog/./src/pages/index.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Seo from \"../components/seo\"\n\nconst blogTagsList = [\"NodeJS\", \"ReactJS\", \"Python\", \"MongoDB\", \"Linux\", \"Cloud\", \"Others\"]\n\nconst Index = ({ data, pageContext: { locale } }) => {\n  const posts = data.allMarkdownRemark.nodes\n  const [selectedTags, setSelectedTags] = useState([])\n  \n  const handleSelectedTag = (tag) => {\n    let copiedSelectedTags = [...selectedTags]\n    let resultSelectedTag = copiedSelectedTags.indexOf(tag) > -1 ? copiedSelectedTags.filter(selectedTag => selectedTag !== tag) : [...copiedSelectedTags, tag]\n  \n    setSelectedTags(resultSelectedTag)\n  }\n\n  if (posts.length === 0) {\n    return (\n      <>\n        <Bio locale={locale} />\n        <p>\n          No blog posts found.\n        </p>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Bio locale={locale} />\n      <div className='blog-tag-list-container'>\n        {blogTagsList.map((tag, index) => (\n          <button \n            key={tag + index}\n            onClick={() => handleSelectedTag(tag)}\n            className={selectedTags.indexOf(tag) > -1 ? \"active-tag\" : \"\"}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n      <ol style={{ listStyle: `none` }}>\n        {posts\n            .filter(post => {\n              if(selectedTags.length === 0) return true\n              return post.frontmatter.tag.find(tag => selectedTags.indexOf(tag) > -1)\n            })\n            .map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              \n              return (\n                <li key={post.fields.slug}>\n                  <article\n                    className=\"post-list-item\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                  >\n                    <header>\n                      <h2>\n                        <Link to={post.fields.slug} itemProp=\"url\">\n                          <span itemProp=\"headline\">{title}</span>\n                        </Link>\n                      </h2>\n                      <p>\n                        {\n                          post.frontmatter.tag.map((tag, index) => (\n                            <span key={tag + index}>{tag}</span>\n                          ))\n                        }\n                      </p>\n                      <small>{post.frontmatter.date}</small>\n                    </header>\n                    <section>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                        />\n                    </section>\n                  </article>\n                </li>\n              )\n        })}\n      </ol>\n    </>\n  )\n}\n\nexport default Index\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = ({ pageContext: { locale } }) => <Seo title=\"Home Page\" locale={locale} />\n\nexport const pageQuery = graphql`\nquery Index(\n  $locale: String\n  $dateFormat: String\n) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        fields: { locale: { eq: $locale } }\n      }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n          locale\n          isDefaultLang\n        }\n        frontmatter {\n          date(formatString: $dateFormat)\n          title\n          description\n          tag\n        }\n      }\n    }\n  }\n`\n"],"names":["blogTagsList","data","pageContext","locale","posts","allMarkdownRemark","nodes","selectedTags","setSelectedTags","useState","length","className","map","tag","index","key","onClick","copiedSelectedTags","resultSelectedTag","indexOf","filter","selectedTag","handleSelectedTag","style","listStyle","post","frontmatter","find","title","fields","slug","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head"],"sourceRoot":""}