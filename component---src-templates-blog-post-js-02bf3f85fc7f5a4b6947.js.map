{"version":3,"file":"component---src-templates-blog-post-js-02bf3f85fc7f5a4b6947.js","mappings":"0JAmCA,IAxBYA,IAA+C,IAADC,EAAAC,EAAAC,EAAA,IAA7C,YAAEC,EAAW,MAAEC,EAAK,OAAEC,EAAM,SAAEC,GAAUP,EAEnD,MAAMQ,EAAkBJ,GAAeK,IAAaH,GAAQF,YACtDM,EAAmC,QAAvBT,EAAGQ,IAAaH,UAAO,IAAAL,OAAA,EAApBA,EAAsBI,MAE3C,OACEM,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAkBL,EAAK,MAAMK,EAAiBL,GACtDM,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASR,IACnCM,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAAQ,YACjCF,EAAAA,cAAA,QACEC,KAAK,iBACLC,SAA6B,QAApBX,EAAAO,IAAaH,UAAO,IAAAJ,GAAQ,QAARC,EAApBD,EAAsBa,cAAM,IAAAZ,OAAR,EAApBA,EAA8Ba,SAAM,KAE/CL,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAASR,IACnCM,EAAAA,cAAA,QAAMC,KAAK,qBAAqBC,QAASL,IACxCD,EACA,C,sHCxBP,MAmDaU,EAAOC,IAGb,IAFLC,MAAQC,eAAgBC,GACxBC,aAAa,OAAEhB,IAChBY,EACC,OACEP,EAAAA,cAACY,EAAAA,EAAG,CACFlB,MAAOgB,EAAKG,YAAYnB,MACxBD,YAAaiB,EAAKG,YAAYpB,aAAeiB,EAAKI,QAClDnB,OAAQA,GACR,EAIN,UAhEyBN,IAGlB,IAFLmB,MAAM,SAAEO,EAAQ,KAAEC,EAAMP,eAAgBC,GACxCC,aAAa,OAAEhB,IAChBN,EACC,OACEW,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WACEiB,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETnB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIoB,SAAS,YAAYV,EAAKG,YAAYnB,OAC1CM,EAAAA,cAAA,SAAIU,EAAKG,YAAYQ,OAEvBrB,EAAAA,cAAA,WACEsB,wBAAyB,CAAEC,OAAQb,EAAKc,MACxCJ,SAAS,gBAEXpB,EAAAA,cAAA,YAEFA,EAAAA,cAAA,OAAKiB,UAAU,iBACbjB,EAAAA,cAAA,MACEyB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX9B,EAAAA,cAAA,UACGe,GACCf,EAAAA,cAAC+B,EAAAA,KAAI,CAACC,GAAIjB,EAASkB,OAAOC,KAAMC,IAAI,QAAO,KACtCC,IAAQzC,GAAQ0C,WAIzBrC,EAAAA,cAAA,UACGgB,GACChB,EAAAA,cAAC+B,EAAAA,KAAI,CAACC,GAAIhB,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BC,IAAQzC,GAAQ2C,SAAS,SAMnC,C","sources":["webpack://my-personal-blog/./src/components/seo.js","webpack://my-personal-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport siteMetaData from '../../config/siteMetadata'\n\nimport * as React from \"react\"\n\nconst Seo = ({ description, title, locale, children }) => {\n\n  const metaDescription = description || siteMetaData[locale].description\n  const defaultTitle = siteMetaData[locale]?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"medium:card\" content=\"summary\" />\n      <meta\n        name=\"meidum:creator\"\n        content={siteMetaData[locale]?.social?.medium || ``}\n      />\n      <meta name=\"medium:title\" content={title} />\n      <meta name=\"medium:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Seo from \"../components/seo\"\n\nimport locales from \"../../config/i18n\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, markdownRemark: post },\n  pageContext: { locale },\n}) => {\n  return (\n    <>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {locales[locale].prevPost}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {locales[locale].nextPost} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </>\n  )\n}\n\nexport const Head = ({\n  data: { markdownRemark: post },\n  pageContext: { locale },\n}) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n      locale={locale}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n    $locale: String\n    $dateFormat: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }, fields: { locale: { eq: $locale } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: $dateFormat)\n        description\n        tag\n      }\n      fields {\n        locale\n      }\n    }\n    previous: markdownRemark(\n      id: { eq: $previousPostId }\n      fields: { locale: { eq: $locale } }\n    ) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(\n      id: { eq: $nextPostId }\n      fields: { locale: { eq: $locale } }\n    ) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","_siteMetaData$locale","_siteMetaData$locale2","_siteMetaData$locale3","description","title","locale","children","metaDescription","siteMetaData","defaultTitle","React","name","content","property","social","medium","Head","_ref2","data","markdownRemark","post","pageContext","Seo","frontmatter","excerpt","previous","next","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","locales","prevPost","nextPost"],"sourceRoot":""}